#include "statement.regex", "inner.regex", "unary.regex", "binary.regex", "typename.regex", "faster.regex"
#entry ^cprogram

(?<primexprraw>(?&assignorsomething)(,(?{call 'comma'})(?&assignorsomething))*+)

(?<primexprnew>(?{push2 \@flags, {"newexpr"}})(?(?=((?&primexprraw)))(??{qr{\Q$^N\E}})
	(?{pop2 \@flags})|(?{pop2 \@flags})(*F)))

(?<primexprcall>(?{push2 \@flags, {"callexpr"}})(?(?=((?&primexprraw)))(??{qr{\Q$^N\E}})
	(?{pop2 \@flags})|(?{pop2 \@flags})(*F)))

(?<castexpr>(?(?=((?&typenamerev)))(??{qr{\Q$^N\E}})|(?<unaryexpr>(?(?=((?&inner)))(??{qr{\Q$^N\E}})
						|(?<inparenths>\s*+[(](?&primexprnew)[)]
						\s*+))(((\[(?&primexprnew)\](?{call 'subscript'})|[(](?{call 'startfunctioncall'})(?&primexprcall)?+[)]
						(?{call 'endfunctioncall'}))\s*+
						|(?<arrowordot>(?<arrowordotraw>[.]|->))(?&identifierminemember)
						|(?<postfixarith>(?<postfixarithraw>[+][+]|--)\s*+)
						(?{call 'unaryincdec'})))*+
						|(?&unary))))

(?<identifierminemember>\s*+(?<ident>(?&identifierraw_qualified))
	(?{call 'memberaccess'})\s*+)

(?<testxpr>(?&inner)|(?&inparenths))

(?<ternarylogicopt>(?(?=(?{push2 \@flags, {}})((?&orlogiorsomething)))
		(?{--$recording; print3("minus minus assignorsomething $recording\n")})(?{push2 \@assrec, \@{$savedcallouts[-1]}; pop2 \@savedcallouts})
		(?{call 'begin_binary' if(existsflag "logicop", {})})(?{replayrecord \@assrec; pop2 \@assrec})(??{qr{\Q$^N\E}})(?{call 'end_binary' if(existsflag "logicop", {})})
		(?{pop2 \@flags})
		|(?{pop2 \@flags})(?{--$recording})(?{replayrecord})(?{pop2 \@savedcallouts})
	)(?&ternaryorsomething)
)

(?<assignorsomething>
	(?(?=(?{push2 \@savedcallouts, []})
		(?{++$recording; print3("recording assignorsomething\n")})((?&unaryexpr)))(??{qr{\Q$^N\E}})
	(?(?=((?<assignop>=(?!=)|\*=|\/=|%=|\+=|-=|<<=|>>=|&=|\^=|\|=)\s*+))
		(??{qr{\Q$^N\E}})(?{--$recording; print3("minus minus assignorsomething $recording\n")})
		(?{replayrecord; pop2 \@savedcallouts})(?&assignorsomething)(?{(assignment())})
		|(?&ternarylogicopt))
		|(?{$savedcallouts[-1] = []; print3("resetting record\n")})(?(?=((?&typenamerev)))|(?{--$recording})(?{pop2 \@savedcallouts})(*F))
		(??{qr{\Q$^N\E}})(?&ternarylogicopt))
)

(?<ternaryorsomething>(?(?=((?{push2 \@savedcallouts, []})
		(?{++$recording; print3("recording ternaryorsomething\n")})(?&ternaryrest)))(??{qr{\Q$^N\E}})
	(?&castexpr)(?&ternarylogicopt)(?{call 'end_ternary'})
	|(?{--$recording})(?{pop2 \@savedcallouts}))
)

(?<ternaryrest>\s*+\?(?{call 'begin_ternary'})(?&primexprraw)
	:(?{call 'mid_ternary'})\s*+)
